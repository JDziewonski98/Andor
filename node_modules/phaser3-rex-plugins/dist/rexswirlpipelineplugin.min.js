!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).rexswirlpipelineplugin=t()}(this,function(){"use strict";function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function e(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}function n(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&i(e,t)}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function i(e,t){return(i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function a(e,t){return!t||"object"!=typeof t&&"function"!=typeof t?c(e):t}function f(e,t,n){return(f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}var t=Math.PI/180,h=function(e){return e*t},o=180/Math.PI,l=function(e){return e*o},d=Phaser.Renderer.WebGL.Pipelines.TextureTintPipeline,p=Phaser.Utils.Objects.GetValue,g=function(){function o(e,t,n){var r;s(this,o);var i=e.game;return(r=a(this,u(o).call(this,{game:i,renderer:i.renderer,fragShader:"\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n#define highmedp highp\n#else\n#define highmedp mediump\n#endif\nprecision highmedp float;\n\n// Scene buffer\nuniform sampler2D uMainSampler; \nvarying vec2 outTexCoord;\nuniform vec2 texSize;\n\n// Effect parameters\nuniform vec2 center;\nuniform float radius;\nuniform float angle;\n\nvoid main (void) {\n  vec2 tc = outTexCoord * texSize;\n  tc -= center;\n  float dist = length(tc);\n  if (dist < radius) {\n    float percent = (radius - dist) / radius;\n    float theta = percent * percent * angle * 8.0;\n    float s = sin(theta);\n    float c = cos(theta);\n    tc = vec2(dot(tc, vec2(c, -s)), dot(tc, vec2(s, c)));\n  }\n  tc += center;\n  gl_FragColor = texture2D(uMainSampler, tc / texSize);\n}\n"})))._width=0,r._height=0,r._centerX=0,r._centerY=0,r._radius=0,r._rotation=0,i.renderer.addPipeline(t,c(r)),r.resetFromJSON(n),r}return n(o,d),e(o,[{key:"resetFromJSON",value:function(e){this.radius=p(e,"radius",0);var t=p(e,"rotation",void 0);return void 0===t?this.setAngle(p(e,"angle",0)):this.setRotation(t),this.setCenter(p(e,"center.x",void 0),p(e,"center.y",void 0)),this}},{key:"setRadius",value:function(e){return this.radius=e,this}},{key:"setRotation",value:function(e){return this.rotation=e,this}},{key:"setAngle",value:function(e){return this.angle=e,this}},{key:"setCenter",value:function(e,t){return void 0===e&&(e=this._width/2,t=this._height/2),this._centerX=e,this._centerY=t,this._setCenter(),this}},{key:"_setCenter",value:function(){this.setFloat2("center",this._centerX,this._centerY)}},{key:"resize",value:function(e,t,n){return this._width=e,this._height=t,f(u(o.prototype),"resize",this).call(this,e,t,n),this.setFloat2("texSize",e,t),this}},{key:"radius",get:function(){return this._radius},set:function(e){this._radius=e,this.setFloat1("radius",e)}},{key:"rotation",get:function(){return this._rotation},set:function(e){this._rotation=e,this.setFloat1("angle",e)}},{key:"angle",get:function(){return l(this.rotation)},set:function(e){this.rotation=h(e)}},{key:"centerX",get:function(){return this._centerX},set:function(e){this._centerX=e,this._setCenter()}},{key:"centerY",get:function(){return this._centerY},set:function(e){this._centerY=e,this._setCenter()}}]),o}();return function(){function t(e){return s(this,t),a(this,u(t).call(this,e))}return n(t,Phaser.Plugins.BasePlugin),e(t,[{key:"start",value:function(){this.game.events.on("destroy",this.destroy,this)}},{key:"add",value:function(e,t,n){return new g(e,t,n)}}]),t}()});
